xcel reading code:
package com.example.financial.service;

import com.example.financial.model.FinancialDetail;
import com.example.financial.repository.FinancialDetailRepository;
import lombok.RequiredArgsConstructor;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

@Service
@RequiredArgsConstructor
public class FinancialDetailService {

    private final FinancialDetailRepository financialDetailRepository;

    public void processExcelFile(MultipartFile file) throws Exception {
        InputStream inputStream = file.getInputStream();
        Workbook workbook = new XSSFWorkbook(inputStream);
        Sheet sheet = workbook.getSheet("Financial Details");

        if (sheet == null) {
            throw new IllegalArgumentException("Sheet 'Financial Details' not found in the Excel file.");
        }

        Iterator<Row> rowIterator = sheet.iterator();
        List<FinancialDetail> financialDetailsList = new ArrayList<>();

        // Skip first 3 header rows
        for (int i = 0; i < 3; i++) {
            if (rowIterator.hasNext()) rowIterator.next();
        }

        // Read data rows
        while (rowIterator.hasNext()) {
            Row row = rowIterator.next();
            FinancialDetail detail = new FinancialDetail();

            detail.setParticulars(getCellValue(row, 0));
            detail.setYear2022(getCellValue(row, 1));
            detail.setYear2023(getCellValue(row, 2));
            detail.setYear2024(getCellValue(row, 3));
            detail.setFy2025(getCellValue(row, 4));
            detail.setYear2025(getCellValue(row, 5));
            detail.setYear2026(getCellValue(row, 6));

            financialDetailsList.add(detail);
        }

        financialDetailRepository.saveAll(financialDetailsList);
        workbook.close();
    }

    private String getCellValue(Row row, int columnIndex) {
        Cell cell = row.getCell(columnIndex, Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);
        if (cell.getCellType() == CellType.NUMERIC) {
            return String.valueOf(cell.getNumericCellValue());
        } else {
            return cell.getStringCellValue().trim();
        }
    }
}
Controller class:
package com.example.financial.controller;

import com.example.financial.service.FinancialDetailService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping("/api/financial-details")
@RequiredArgsConstructor
public class FinancialDetailController {

    private final FinancialDetailService financialDetailService;

    @PostMapping("/upload")
    public ResponseEntity<String> uploadExcelFile(@RequestParam("file") MultipartFile file) {
        try {
            financialDetailService.processExcelFile(file);
            return ResponseEntity.ok("File uploaded and processed successfully.");
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Error processing file: " + e.getMessage());
        }
    }
}
dependency:
 <!-- Apache POI (for Excel processing) -->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
    </dependency>
