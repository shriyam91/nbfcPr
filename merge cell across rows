!--here we have table with 5 columns, and here we needed to merge the 1st cell and 2nd cell across all the rows, so when we merge column across all the rows(ie all the cells in the
column need to be merged) then we first create the merged cell and and add it in the table and then move on to the create the second cell and create the merged cell for the 
2nd column and add it to the table and then we  use the stream to populate the 3rd 4rth and 5th cell of each row--!
case1:when merging column across all the rows
var extRatingWidth2 = new float[] { 1f, 3f, 3f, 1.5f, 1.5f };
			Table extRating2 = new Table(UnitValue.createPercentArray(extRatingWidth2)).setFontSize(AppConstants.FONT);
			extRating2.setWidth(UnitValue.createPercentValue(100)).setFixedLayout();
			if (result!=null && result.getSecurityTermList()!=null) {
				
				Cell srNoContent01 = new Cell(result.getSecurityTermList().size(), 1).add(new Paragraph("11")).setCharacterSpacing(0.5f)
						.setTextAlignment(TextAlignment.CENTER).setFontSize(AppConstants.FONT);
				extRating2.addCell(srNoContent01);  
				Cell mergedCell = new Cell(result.getSecurityTermList().size(), 1)
			    		   .add(new Paragraph("Security(for previous loans please refer part I para 2)")).setCharacterSpacing(0.5f).setFontSize(AppConstants.FONT);
			       extRating2.addCell(mergedCell);
			 
			       result.getSecurityTermList().stream().forEach(dt -> {
			    	   extRating2.addCell(new Cell().add(new Paragraph( reportUtil.getData(dt.getParticulars())))); // Column 1
			    	   // skip column 2 since it's merged
			    	   extRating2.addCell(new Cell().add(new Paragraph( reportUtil.getData(dt.getProposedTerms())))); // Column 3
			    	   extRating2.addCell(new Cell().add(new Paragraph( reportUtil.getData(dt.getRemarks())))); // Column 4
			    	});

			}
			doc.add(extRating2);
			doc.add(ReportUtil.secSpace);
case2: when merging column across partial rows
Table table = new Table(5);

List<ApprDto> apprList = getApprList(); // size = 5 assumed

// Merged cell for Col1 (rows 1–3)

Cell serialNoMerged = new Cell(3, 1).add("11");

table.addCell(serialNoMerged);

// Merged cell for Col2 (rows 1–3)

Cell headingMerged = new Cell(3, 1).add("Heading");

table.addCell(headingMerged);

// Add Col3–5 for first 3 rows

apprList.subList(0, 3).forEach(dto -> {

    table.addCell(new Cell().add(dto.getCol3()));

    table.addCell(new Cell().add(dto.getCol4()));

    table.addCell(new Cell().add(dto.getCol5()));

});

// Add all 5 cells for remaining rows (4 & 5)

apprList.subList(3, 5).forEach(dto -> {

    table.addCell(new Cell().add("X1")); // Col1

    table.addCell(new Cell().add("X2")); // Col2

    table.addCell(new Cell().add(dto.getCol3()));

    table.addCell(new Cell().add(dto.getCol4()));

    table.addCell(new Cell().add(dto.getCol5()));

}); 
